# Production Environment Values
# Override default values for production environment

replicaCount: 3

image:
  repository: ghcr.io/org/myapp
  tag: "v1.2.3"  # Specific version tag for production
  pullPolicy: IfNotPresent

# Production-specific annotations
podAnnotations:
  app.env: "production"
  app.version: "v1.2.3"
  monitoring.prometheus.io/scrape: "true"
  backup.velero.io/backup-volumes: "data"

# Production resource limits (higher)
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# Enable autoscaling for production
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80

# Production ingress (if needed)
ingress:
  enabled: true
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: myapp.company.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: myapp-tls
      hosts:
        - myapp.company.com

# Application configuration for production
config:
  appMode: "production"
  greeting: "Welcome to MyApp Production!"
  debug: false

# Environment variables
env:
  - name: NODE_ENV
    value: "production"
  - name: LOG_LEVEL
    value: "warn"
  - name: METRICS_ENABLED
    value: "true"
  - name: RATE_LIMIT_ENABLED
    value: "true"

# Health check configuration (more conservative)
healthCheck:
  enabled: true
  path: /health
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 5

# Security context for production
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000

# Secrets enabled in production (managed by external-secrets)
secrets:
  enabled: true
  # These will be populated by external-secrets operator
  apiKey: ""
  databaseUrl: ""

# Node selector for production workloads
nodeSelector:
  node-type: "production"

# Anti-affinity for high availability
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - myapp
        topologyKey: kubernetes.io/hostname
