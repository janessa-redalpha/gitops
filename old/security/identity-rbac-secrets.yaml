---
# Identity and RBAC Configuration for Multi-Cluster GitOps
# SSO Integration with OIDC/OAuth2

apiVersion: v1
kind: ConfigMap
metadata:
  name: oidc-config
  namespace: flux-system
  labels:
    app.kubernetes.io/name: oidc-config
    app.kubernetes.io/part-of: flux
data:
  # OIDC Provider Configuration
  oidc-issuer-url: "https://auth.example.com"
  oidc-client-id: "kubernetes-cluster"
  oidc-username-claim: "email"
  oidc-groups-claim: "groups"
  oidc-ca-file: "/etc/ssl/certs/oidc-ca.pem"

---
# ClusterRole for platform administrators
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: platform-admin
  labels:
    app.kubernetes.io/name: platform-admin
    app.kubernetes.io/part-of: flux
rules:
  # Full access to platform components
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]
  # Flux specific permissions
  - apiGroups: ["source.toolkit.fluxcd.io", "kustomize.toolkit.fluxcd.io", "helm.toolkit.fluxcd.io"]
    resources: ["*"]
    verbs: ["*"]

---
# ClusterRole for application developers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: app-developer
  labels:
    app.kubernetes.io/name: app-developer
    app.kubernetes.io/part-of: flux
rules:
  # Application deployment permissions
  - apiGroups: ["apps"]
    resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["services", "configmaps", "secrets", "pods", "persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses", "networkpolicies"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # Limited Flux permissions
  - apiGroups: ["kustomize.toolkit.fluxcd.io"]
    resources: ["kustomizations"]
    verbs: ["get", "list", "watch"]

---
# ClusterRole for read-only access
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: read-only
  labels:
    app.kubernetes.io/name: read-only
    app.kubernetes.io/part-of: flux
rules:
  # Read-only access to most resources
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]

---
# ClusterRoleBinding for platform administrators
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: platform-admin-binding
  labels:
    app.kubernetes.io/name: platform-admin-binding
    app.kubernetes.io/part-of: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: platform-admin
subjects:
  - kind: Group
    name: "platform-admins"
    apiGroup: rbac.authorization.k8s.io

---
# ClusterRoleBinding for application developers
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: app-developer-binding
  labels:
    app.kubernetes.io/name: app-developer-binding
    app.kubernetes.io/part-of: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: app-developer
subjects:
  - kind: Group
    name: "app-developers"
    apiGroup: rbac.authorization.k8s.io

---
# ClusterRoleBinding for read-only access
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-only-binding
  labels:
    app.kubernetes.io/name: read-only-binding
    app.kubernetes.io/part-of: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: read-only
subjects:
  - kind: Group
    name: "read-only-users"
    apiGroup: rbac.authorization.k8s.io

---
# Namespace-specific RBAC for multi-tenancy
apiVersion: v1
kind: Namespace
metadata:
  name: team-backend
  labels:
    name: team-backend
    team: backend
    app.kubernetes.io/name: team-backend
    app.kubernetes.io/part-of: flux

---
# Role for team backend
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: team-backend-admin
  namespace: team-backend
  labels:
    app.kubernetes.io/name: team-backend-admin
    app.kubernetes.io/part-of: flux
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["*"]

---
# RoleBinding for team backend
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: team-backend-admin-binding
  namespace: team-backend
  labels:
    app.kubernetes.io/name: team-backend-admin-binding
    app.kubernetes.io/part-of: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: team-backend-admin
subjects:
  - kind: Group
    name: "team-backend"
    apiGroup: rbac.authorization.k8s.io

---
# ResourceQuota for team backend
apiVersion: v1
kind: ResourceQuota
metadata:
  name: team-backend-quota
  namespace: team-backend
  labels:
    app.kubernetes.io/name: team-backend-quota
    app.kubernetes.io/part-of: flux
spec:
  hard:
    requests.cpu: "4"
    requests.memory: 8Gi
    limits.cpu: "8"
    limits.memory: 16Gi
    persistentvolumeclaims: "10"
    services: "5"
    secrets: "20"
    configmaps: "20"

---
# LimitRange for team backend
apiVersion: v1
kind: LimitRange
metadata:
  name: team-backend-limits
  namespace: team-backend
  labels:
    app.kubernetes.io/name: team-backend-limits
    app.kubernetes.io/part-of: flux
spec:
  limits:
  - default:
      cpu: "500m"
      memory: "512Mi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
